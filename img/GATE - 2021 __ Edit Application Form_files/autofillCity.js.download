/**
 *  for autocompleting City & state name in Application form
 */
$(document).ready(function(){
		
		var items = [];
		var fileVersionUni  = "8"; // update with value if JSON file is updated
			
		if(localStorage.getItem("dataCache_ct") && localStorage.getItem("fileVersionCt") == fileVersionUni ){
			items = JSON.parse(localStorage.getItem("dataCache_ct"));
			//console.log("items : "+items);
		}
		else{
			$.getJSON( "./js/pincode-mapping.json", function( jsonData ) {	
				 
				  localStorage.setItem("dataCache_ct", JSON.stringify(jsonData));
				  localStorage.setItem("fileVersionCt", fileVersionUni);
				  items = JSON.parse(localStorage.getItem("dataCache_ct"));
				 // console.log("items : "+items);
			});
		}
		
		$("#corrAddrPincode").on("blur change", function(){
			var pincode = $(this).val();
			//alert(pincode);
			$.each( items, function( key, obj ) {
			    
			   if(pincode == key){
				   console.log(obj.city + " == " +obj.state);
				   var city= obj.city;
				   var state=obj.state;
				   fillCityNames("#corrAddrCity", "#corrAddrState", "#corrAddressCountry", city, state, corrAddrPincode);
			   }
			});
		});
		
		$("#collegePinCode").on("blur change", function(){
			var clgpincode = $(this).val();
			//alert(clgpincode);
			$.each( items, function( key, obj ) {
			    
			   if(clgpincode == key){
				   console.log(obj.city + " == " +obj.state);
				   var city= obj.city;
				   var state=obj.state;
				   fillCityNames("#qualDegreeCity", "#qualDegreeState", "#collegeCountry", city, state, collegePinCode);
				   populateUni();
				   populateClg();
			   }
			});
		});
		
		$("#qualDegreeState").on("change",populateUni);
		populateUni();
	});

function fillCityNames(cityField, statefield, countryField, city, state, changedPincode){
	$(countryField).val("1");
	$(cityField).val(city);
	if(changedPincode == corrAddrPincode)
	{
		toggleCorrAddrState();
	}
	if(changedPincode == collegePinCode)
	{
		toggleCollegeState();
	}
	$(statefield).val(state);
}

function toggleCorrAddrState(){
	var corrAddrCountry = $("#corrAddressCountry").val();

	if (corrAddrCountry != 1 && corrAddrCountry != -1) {
		$('#corrAddrState').empty().append('<option value="XX">Other</option>');
		$('#corrAddrState').val('XX');
	} else {
		$('#corrAddrState').empty().html(cloneStates);
		$("#corrAddrState option[value='XX']").remove();
	}
}

function toggleCollegeState(){
	var collegeCountry = $("#collegeCountry").val();

	if (collegeCountry != 1 && collegeCountry != -1) {
		$('#qualDegreeState').empty().append('<option value="XX">Other</option>');
		$('#qualDegreeState').val('XX');
	} else {
		$('#qualDegreeState').empty().html(cloneStates);
		$("#qualDegreeState option[value='XX']").remove();
	}
}

function populateUni(){
	//console.log("in function");
	var items = [];
	var code = null;
	var obj = {};
	var fileVersionUni  = "8"; // update with value if JSON file is updated
		
	if(localStorage.getItem("dataCache_uni") && localStorage.getItem("fileVersionUni") == fileVersionUni ){
		items = JSON.parse(localStorage.getItem("dataCache_uni"));
	}
	else{
		$.getJSON( "./js/university_list.json", function( jsonData ) {	
			 
			  localStorage.setItem("dataCache_uni", JSON.stringify(jsonData));
			  localStorage.setItem("fileVersionUni", fileVersionUni);
			  items = JSON.parse(localStorage.getItem("dataCache_uni"));
			});
	}
	
	var state = $('#qualDegreeState').val();
	if(state){
		fillUniversityNames(items, state);
	}
}

function fillUniversityNames(items, code){
	var options = {
			data: items[code],
					
			list: {
					match: {
					enabled: true
		    	}
			}
		};			
	$("#provider-json-uni").easyAutocomplete(options);
}

function populateClg(){
	var items1 = [];
	var code = null;
	var obj = {};
	var fileVersion  = "8"; // update with value if JSON file is updated
	
	if(localStorage.getItem("dataCache_clg") && localStorage.getItem("fileVersion") == fileVersion ){
		items1 = JSON.parse(localStorage.getItem("dataCache_clg"));
	}
	else{
		$.getJSON( "./js/CollegeList_2019.json", function( jsonData ) {	
			 
			  localStorage.setItem("dataCache_clg", JSON.stringify(jsonData));
			  localStorage.setItem("fileVersion", fileVersion);
			  items1 = JSON.parse(localStorage.getItem("dataCache_clg"));
			});
	}
	var state = $('#qualDegreeState').val();
	if(state){
			fillCollegeNames(items1, state);
	}
}

function fillCollegeNames(items1, code){
	var options = {
			data: items1[code],
					
			list: {
					match: {
					enabled: true
		    	}
			}
		};
			
	$("#provider-json-col").easyAutocomplete(options);
}